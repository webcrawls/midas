plugins {
    id 'net.minecraftforge.gradle' version '6.0.6'
    id "java"
    id "com.github.johnrengelman.shadow" version "8.1.1"
}


group = 'live.webcrawls.midas'
version = '1.0-SNAPSHOT'

java {
    archivesBaseName = 'midas'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

configurations {
    shade
    implementation.extendsFrom shade
}

minecraft {
    mappings channel: 'official', version: '1.19.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'midas'

            mods {
                midas {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'midas'

            mods {
                midas {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'midas'

            mods {
                midas {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'midas', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                midas {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.11'
    shade project(":api")
    shade project(":common")
    shade "net.kyori:adventure-text-serializer-gson:4.14.0"

}

jar {
    archiveClassifier = 'slim'
    manifest {
        attributes([
                "Specification-Title"     : "midas",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

shadowJar {
    archiveClassifier = ""
    configurations = [project.configurations.shade]
    finalizedBy 'reobfShadowJar'
    relocate("net.kyori", "live.webcrawls.midas.dependency.net.kyori")
}

assemble.dependsOn shadowJar

reobf {
    shadowJar {}
}